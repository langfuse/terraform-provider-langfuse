// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cresta/terraform-provider-langfuse/langfuse (interfaces: AdminClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	langfuse "github.com/cresta/terraform-provider-langfuse/langfuse"
	gomock "github.com/golang/mock/gomock"
)

// MockAdminClient is a mock of AdminClient interface.
type MockAdminClient struct {
	ctrl     *gomock.Controller
	recorder *MockAdminClientMockRecorder
}

// MockAdminClientMockRecorder is the mock recorder for MockAdminClient.
type MockAdminClientMockRecorder struct {
	mock *MockAdminClient
}

// NewMockAdminClient creates a new mock instance.
func NewMockAdminClient(ctrl *gomock.Controller) *MockAdminClient {
	mock := &MockAdminClient{ctrl: ctrl}
	mock.recorder = &MockAdminClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAdminClient) EXPECT() *MockAdminClientMockRecorder {
	return m.recorder
}

// CreateOrganization mocks base method.
func (m *MockAdminClient) CreateOrganization(arg0 context.Context, arg1 string) (*langfuse.Organization, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganization", arg0, arg1)
	ret0, _ := ret[0].(*langfuse.Organization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganization indicates an expected call of CreateOrganization.
func (mr *MockAdminClientMockRecorder) CreateOrganization(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganization", reflect.TypeOf((*MockAdminClient)(nil).CreateOrganization), arg0, arg1)
}

// CreateOrganizationApiKey mocks base method.
func (m *MockAdminClient) CreateOrganizationApiKey(arg0 context.Context, arg1 string) (*langfuse.OrganizationApiKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateOrganizationApiKey", arg0, arg1)
	ret0, _ := ret[0].(*langfuse.OrganizationApiKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateOrganizationApiKey indicates an expected call of CreateOrganizationApiKey.
func (mr *MockAdminClientMockRecorder) CreateOrganizationApiKey(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateOrganizationApiKey", reflect.TypeOf((*MockAdminClient)(nil).CreateOrganizationApiKey), arg0, arg1)
}

// DeleteOrganization mocks base method.
func (m *MockAdminClient) DeleteOrganization(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganization", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganization indicates an expected call of DeleteOrganization.
func (mr *MockAdminClientMockRecorder) DeleteOrganization(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganization", reflect.TypeOf((*MockAdminClient)(nil).DeleteOrganization), arg0, arg1)
}

// DeleteOrganizationApiKey mocks base method.
func (m *MockAdminClient) DeleteOrganizationApiKey(arg0 context.Context, arg1, arg2 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteOrganizationApiKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteOrganizationApiKey indicates an expected call of DeleteOrganizationApiKey.
func (mr *MockAdminClientMockRecorder) DeleteOrganizationApiKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteOrganizationApiKey", reflect.TypeOf((*MockAdminClient)(nil).DeleteOrganizationApiKey), arg0, arg1, arg2)
}

// GetOrganization mocks base method.
func (m *MockAdminClient) GetOrganization(arg0 context.Context, arg1 string) (*langfuse.Organization, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrganization", arg0, arg1)
	ret0, _ := ret[0].(*langfuse.Organization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrganization indicates an expected call of GetOrganization.
func (mr *MockAdminClientMockRecorder) GetOrganization(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrganization", reflect.TypeOf((*MockAdminClient)(nil).GetOrganization), arg0, arg1)
}

// GetOrganizationApiKey mocks base method.
func (m *MockAdminClient) GetOrganizationApiKey(arg0 context.Context, arg1, arg2 string) (*langfuse.OrganizationApiKey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetOrganizationApiKey", arg0, arg1, arg2)
	ret0, _ := ret[0].(*langfuse.OrganizationApiKey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetOrganizationApiKey indicates an expected call of GetOrganizationApiKey.
func (mr *MockAdminClientMockRecorder) GetOrganizationApiKey(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetOrganizationApiKey", reflect.TypeOf((*MockAdminClient)(nil).GetOrganizationApiKey), arg0, arg1, arg2)
}

// UpdateOrganization mocks base method.
func (m *MockAdminClient) UpdateOrganization(arg0 context.Context, arg1 string, arg2 *langfuse.UpdateOrganizationRequest) (*langfuse.Organization, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateOrganization", arg0, arg1, arg2)
	ret0, _ := ret[0].(*langfuse.Organization)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateOrganization indicates an expected call of UpdateOrganization.
func (mr *MockAdminClientMockRecorder) UpdateOrganization(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateOrganization", reflect.TypeOf((*MockAdminClient)(nil).UpdateOrganization), arg0, arg1, arg2)
}
